# This is a basic workflow to help you get started with Actions
name: CI
# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: '**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  android_build :
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      max-parallel: 0

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.0.4'

      # Runs a single command using the runners shell
      - name: Build apk
        run: flutter build apk

  ios_build :

    runs-on : macos-latest

    steps:

      #- uses: actions/checkout@v2

      #- uses: actions/setup-java@v1
      #  with:
      #    java-version: '12.x'

      #- uses: subosito/flutter-action@v1
      #  with:
      #    flutter-version: '2.0.4'

      - name: Build IOS app
        run: echo We do not build IOS app yet beacause we do not have necessary certificates and hardware to create it and Apple Developper Account

  test:

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.0.4'
          
      - name: Unit tests
        run: flutter test --coverage
        #TODO : ajouter une Ã©tape pour le lancement des tests des microservices (google functions)

#For master branch only, deploy google functions and publish the apk

  cloud_functions_deploy:

    if: github.ref == 'refs/heads/master'

    runs-on: ubuntu-latest

    needs: [android_build, test]

    steps:

      - uses: actions/checkout@v2

      - name: Install npm packages
        run: |
          cd functions
          npm install

      - name: Firebase GitHub Action
        uses: jonahsnider/firebase-action@1.0.7
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        with:
          args: deploy --only functions

  deploy_apk:

    if: github.ref == 'refs/heads/master'

    runs-on: ubuntu-latest
    #To don't publish an apk which is not in accord with the microservices
    #needs: [cloud_functions_deploy]

    steps:

      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.0.4'

      - name: Build apk
        run: flutter build apk

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/app/outputs/flutter-apk/app-release.apk
          tag: ${{ github.ref }}
          asset_name: "PrixBanque.apk"
          overwrite: true
          body: "Uploading a new version of PrixBanque"
