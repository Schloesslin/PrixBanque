# This is a basic workflow to help you get started with Actions
name: CI
# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    #branches: [ master ]
    #branches: [ GitCI/CD ]
    branches: '**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build :
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    strategy:
      max-parallel: 0

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.0.4'

      # Runs a single command using the runners shell
      - name: Build apk
        run: flutter build apk
  test:

    runs-on: ubuntu-latest

    steps:

      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.0.4'
          
      - name: Unit tests
        run: flutter test
        #TODO : ajouter une Ã©tape pour le lancement des tests des microservices (google functions)

#For master branch only, deploy google functions and publish the apk

  cloud functions deploy:

    if: github.ref == 'refs/heads/master'

    runs-on: ubuntu-latest

    needs: [build,test]

    steps:

      -name: Echo test
      run: echo This is google functions deployment, which are run only for the master branch




